name: CI/CD Pipeline (Terraform & Build & Test & Deploy)

on:
  push:
    branches: [main]
  pull_request:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: asterra-devops-repo
  IMAGE_TAG: ${{ github.sha }}
  PYTHONPATH: ${{ github.workspace }}/asterra/geojson_loader

jobs:
  build-and-deploy:
    name: üöÄ Terraform ‚Üí Test ‚Üí Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3

      - name: Clean Terraform cache
        working-directory: asterra/terraform/
        run: |
          rm -rf .terraform .terraform.lock.hcl

      - name: Terraform Init
        working-directory: asterra/terraform/
        run: terraform init

      - name: Terraform Apply (auto-approve)
        working-directory: asterra/terraform/
        run: terraform apply -auto-approve -input=false -no-color

      - name: Install system dependencies (GDAL)
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r asterra/geojson_loader/requirements.txt
          pip install pytest

      - name: Run Tests
        run: PYTHONPATH=asterra/geojson_loader pytest asterra/tests

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories \
            --repository-names $ECR_REPOSITORY \
            --region $AWS_REGION || \
          aws ecr create-repository \
            --repository-name $ECR_REPOSITORY \
            --region $AWS_REGION

      - name: Build and Push Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG asterra/geojson_loader
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kubeconfig manually
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name asterra-F
          sed -i 's/client.authentication.k8s.io\/v1alpha1/client.authentication.k8s.io\/v1beta1/g' ~/.kube/config


      # ‚úÖ Deploy to EKS using kubectl via ianbelcher/eks-kubectl-action
      - name: üöÄ Deploy to Kubernetes
        uses: ianbelcher/eks-kubectl-action@1.6
        with:
          aws_region: ${{ env.AWS_REGION }}
          cluster_name: asterra-F
          args: set image deployment/geojson-processor geojson-processor=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: ‚è±Ô∏è Wait for rollout to complete
        uses: ianbelcher/eks-kubectl-action@1.6
        with:
          aws_region: ${{ env.AWS_REGION }}
          cluster_name: asterra-F
          args: rollout status deployment/geojson-processor
